[{"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/index.js":"1","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/reportWebVitals.js":"2","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/App.js":"3","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/containers/HomePageContainer.js":"4","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/SearchBar.js":"5","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/DisplayOfResults.js":"6","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/common/UnOrderedDisplay.js":"7","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/NominatedResults.js":"8","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/assets/fontawesome/fontawesomelibrary.js":"9","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/ThankYouBar.js":"10","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/services/searchRequest.js":"11","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/services/Api.js":"12","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/Pagination.js":"13"},{"size":478,"mtime":1610229321819,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1610223220307,"results":"16","hashOfConfig":"15"},{"size":269,"mtime":1610232751153,"results":"17","hashOfConfig":"15"},{"size":7068,"mtime":1610346160952,"results":"18","hashOfConfig":"15"},{"size":1191,"mtime":1610319528834,"results":"19","hashOfConfig":"15"},{"size":594,"mtime":1610319527613,"results":"20","hashOfConfig":"15"},{"size":1724,"mtime":1610346243941,"results":"21","hashOfConfig":"15"},{"size":388,"mtime":1610305090680,"results":"22","hashOfConfig":"15"},{"size":258,"mtime":1610319822313,"results":"23","hashOfConfig":"15"},{"size":240,"mtime":1610341764470,"results":"24","hashOfConfig":"15"},{"size":449,"mtime":1610341867829,"results":"25","hashOfConfig":"15"},{"size":210,"mtime":1610342022584,"results":"26","hashOfConfig":"15"},{"size":1554,"mtime":1610342120087,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1jx7e2k",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/index.js",[],["56","57"],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/reportWebVitals.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/App.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/containers/HomePageContainer.js",["58"],"import { React, useState, useEffect, useRef } from 'react';\n\n//Components imported\nimport SearchBar from '../components/SearchBar';\nimport DisplayOfResults from '../components/DisplayOfResults';\nimport NominatedResults from '../components/NominatedResults';\nimport ThankYouBar from '../components/ThankYouBar'\n\n// Bootstrap imports\nimport { Container, Row, Col } from 'react-bootstrap';\n\n//API calls\nimport { searchRequest } from './../services/searchRequest';\n\n// import mockData from '../assets/mock/mockDataArray.json';\n\nconst HomePageContainer = () => {\n\n    //Checks if we have nominations saved and get the ids as well\n    const savedNominations = window.localStorage.getItem('savedNoms') ?\n        JSON.parse(window.localStorage.getItem('savedNoms')) : [];\n\n    const savedId = window.localStorage.getItem('savedIds') ?\n        JSON.parse(window.localStorage.getItem('savedIds')) :\n        [];\n\n    //To control the scrolling up to top when user selects 5 movies\n    const thankYouBar = useRef(null);\n\n    //intital local storage setup\n    const [localStorage, setLocalStorage ] = useState( {\n        searchResults: [],\n        nominatedMovies: savedNominations,\n        searchTerm: '',\n        setId: new Set([...savedId]),\n        isTyping: false,\n        pageNumber: 1,\n        totalResults: 0,\n        isChangingPage: false\n    });\n\n    //wait period before API call is made\n    const WAIT_PERIOD = 1500;\n\n\n    /********** Handle Change Functions and Updating State ************/\n    //add nominated movies to local storage and state\n    const addNomMovies = (data) => {\n        setLocalStorage(oldStorage => ({\n            ...oldStorage,\n            nominatedMovies : [\n                ...oldStorage.nominatedMovies,\n                {\n                    Title: data.Title,\n                    Year: data.Year,\n                    imdbID: data.imdbID\n                }\n            ],\n            setId: new Set([...oldStorage.setId.add(data.imdbID)])\n\n        }))\n    };\n\n    //remove nominated movies from local storage and state\n    const removeNomMovies = (data) => {\n        setLocalStorage(oldStorage => ({\n            ...oldStorage,\n            nominatedMovies : [\n                ...oldStorage.nominatedMovies.filter(nomMovie => nomMovie.imdbID !== data.imdbID)\n            ],\n            setId: new Set([...oldStorage.setId].filter(fid => fid !== data.imdbID))\n        }));\n    };\n\n    //\n    const updateIsTyping = () => {\n        setLocalStorage(oldStorage => ({\n            ...oldStorage,\n            isTyping: false\n        }))\n    }\n\n    //handles how we are digesting pagination\n    const changePage = (type) => {\n        setLocalStorage(oldStorage => ({\n            ...oldStorage,\n            pageNumber: type === '+' ? oldStorage.pageNumber + 1 : oldStorage.pageNumber - 1,\n            isChangingPage: true\n        }))\n    }\n\n    //handles updating the search term\n    const updateSearchTerm = (e) => {\n        let term = e.target.value;\n\n        setLocalStorage(oldStorage => ({\n            ...oldStorage,\n            searchTerm: term,\n            isTyping: true,\n\n\n        }));\n\n    };\n\n    /********** Use Effects ************/\n    //Set local Storage\n    useEffect(() => {\n        if(localStorage.nominatedMovies.length) {\n            window.localStorage.setItem('savedNoms', JSON.stringify(localStorage.nominatedMovies));\n            window.localStorage.setItem('savedIds', JSON.stringify([...localStorage.setId]));\n        }\n    }, [localStorage.nominatedMovies, localStorage.setId]);\n\n\n\n    //The delay timer in API request\n    useEffect(() => {\n        const delayAPIRequest = setTimeout(updateIsTyping, WAIT_PERIOD);\n        return () => clearTimeout(delayAPIRequest);\n    }, [localStorage.searchTerm]);\n\n\n    //API request when we have text and isTyping is false\n    useEffect(() => {\n        if (localStorage.searchTerm && !localStorage.isTyping) {\n            searchRequest(localStorage.searchTerm).then(response => {\n                setLocalStorage(oldStorage => {\n                    let totalResults = response.Search ? response.totalResults : 0;\n                    return ({\n                        ...oldStorage,\n                        searchResults: response.Search ? response.Search : [],\n                        totalResults,\n                        pageNumber: 1,\n                        isChangingPage: false\n                    });\n                });\n            });\n        }\n    }, [localStorage.isTyping, localStorage.searchTerm]);\n\n    //API pagination request when we are changing pages\n    useEffect(() => {\n        if (localStorage.searchTerm && localStorage.isChangingPage) {\n            searchRequest(localStorage.searchTerm, localStorage.pageNumber).then(response => {\n                setLocalStorage(oldStorage => {\n                    let totalResults = response.Search ? response.totalResults : 0;\n                    return ({\n                        ...oldStorage,\n                        searchResults: response.Search ? response.Search : [],\n                        totalResults,\n                        isChangingPage: false\n                    });\n                });\n            });\n        }\n    }, [localStorage.isChangingPage]);  \n\n\n    //Scroll effect when user has selected 5 movie nominations\n    useEffect(() => {\n        if (localStorage.setId.size >= 5) {\n            thankYouBar.current.scrollIntoView();\n        }\n    }, [localStorage.setId]);\n    \n\n    return (\n        <div className=\"my-5\">\n            <Container>\n                <Row>\n                    <Col>\n                        <header className='text-left'>\n                            <h1>The Shoppies</h1>\n                        </header>\n                    </Col>\n                </Row>\n            </Container>\n            {/* Thank you bar */}\n            { localStorage.setId.size === 5 &&\n                <Container>\n                    <Row>\n                        <Col ref={thankYouBar}>\n                            <ThankYouBar />\n                        </Col>\n                    </Row>\n                </Container>\n            }\n\n            {/* Search Bar */}\n            <Container>\n                <SearchBar searchTerm={ localStorage.searchTerm } handleChange={updateSearchTerm}/>\n            </Container>\n            {/* Lower row with two panels */}\n            <Container>\n                <Row>\n                    <Col xs={12} md={6}>\n                        <DisplayOfResults \n                            data={ localStorage } \n                            searchTerm={ localStorage.searchTerm } \n                            onClick={addNomMovies}\n                            pagination={[localStorage.pageNumber,localStorage.totalResults, changePage]} \n                            />\n                    </Col>\n                    <Col xs={12} md={6}>\n                        <NominatedResults data={ localStorage.nominatedMovies } onClick={removeNomMovies}/>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n\n};\n\nexport default HomePageContainer;","/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/SearchBar.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/DisplayOfResults.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/common/UnOrderedDisplay.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/NominatedResults.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/assets/fontawesome/fontawesomelibrary.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/ThankYouBar.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/services/searchRequest.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/services/Api.js",[],"/Users/littlekoe/Documents/Projects/Shoppies/the-shoppies/src/components/Pagination.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":157,"column":8,"nodeType":"65","endLine":157,"endColumn":37,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'localStorage.pageNumber' and 'localStorage.searchTerm'. Either include them or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [localStorage.isChangingPage, localStorage.pageNumber, localStorage.searchTerm]",{"range":"72","text":"73"},[5174,5203],"[localStorage.isChangingPage, localStorage.pageNumber, localStorage.searchTerm]"]